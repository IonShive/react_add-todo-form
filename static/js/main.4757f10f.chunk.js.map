{"version":3,"sources":["api/users.ts","services/getUserById.tsx","components/TodoForm/TodoForm.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","TodoForm","onSubmit","useState","title","setTitle","setUserId","hasTitleError","setHasTitleError","hasUserIdError","setHasUserIdError","className","action","method","event","preventDefault","trimmedTitle","trim","completed","htmlFor","type","value","placeholder","onChange","target","disabled","map","i","UserInfo","href","TodoInfo","todo","classNames","TodoList","todos","getNewTodoId","Math","max","initialTodos","App","setTodos","newTodo","currentTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4757f10f.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\n\nexport function getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n","import React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { getUserById } from '../../services/getUserById';\nimport usersFromServer from '../../api/users';\nimport './TodoForm.scss';\n\ntype TodoFormProps = {\n  onSubmit: (todo: Todo) => void\n};\n\nexport const TodoForm: React.FC<TodoFormProps> = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const handleSumbit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const trimmedTitle = title.trim();\n\n    setHasTitleError(!trimmedTitle);\n    setHasUserIdError(userId === 0);\n\n    if (trimmedTitle && userId > 0) {\n      onSubmit({\n        id: 0,\n        title,\n        userId,\n        completed: false,\n        user: getUserById(userId),\n      });\n\n      setTitle('');\n      setUserId(0);\n    }\n  };\n\n  return (\n    <form\n      className=\"todo-form\"\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSumbit}\n    >\n      <div className=\"todo-form__field\">\n        <label className=\"todo-form__label\" htmlFor=\"title\">Title: </label>\n        <input\n          className=\"todo-form__input\"\n          id=\"title\"\n          type=\"text\"\n          value={title}\n          placeholder=\"Enter a title\"\n          onChange={handleTitleChange}\n          data-cy=\"titleInput\"\n        />\n        {hasTitleError && (\n          <span className=\"todo-form__error\">Please enter a title*</span>\n        )}\n      </div>\n\n      <div className=\"todo-form__field\">\n        <label className=\"todo-form__label\" htmlFor=\"userSelect\">User: </label>\n        <select\n          className=\"todo-form__select\"\n          id=\"userSelect\"\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleUserIdChange}\n          key={userId}\n        >\n          <option\n            className=\"todo-form__option\"\n            value=\"0\"\n            disabled\n          >\n            Choose a user\n          </option>\n          {usersFromServer.map((user, i) => (\n            <option\n              className=\"todo-form__option\"\n              key={user.id}\n              value={i + 1}\n            >\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {hasUserIdError && (\n          <span className=\"todo-form__error\">Please choose a user*</span>\n        )}\n      </div>\n\n      <button className=\"todo-form__btn\" type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype UserInfoProps = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ user }) => {\n  return (\n    <a className=\"user-info\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\nimport './TodoInfo.scss';\n\ntype TodoInfoProps = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  return (\n    <article\n      className={classNames('todo-info', {\n        'todo-info--completed': todo.completed,\n      })}\n      data-id={todo.id}\n    >\n      <h2 className=\"todo-info__title\">\n        {todo.title}\n      </h2>\n      {todo.user && (\n        <UserInfo\n          user={todo.user}\n        />\n      )}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype TodosProps = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<TodosProps> = ({ todos }) => {\n  return (\n    <section className=\"todo-list\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { getUserById } from './services/getUserById';\nimport { Todo } from './types/Todo';\nimport { TodoForm } from './components/TodoForm/TodoForm';\nimport { TodoList } from './components/TodoList';\nimport todosFromServer from './api/todos';\n\nfunction getNewTodoId(todos: Todo[]) {\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return maxId + 1;\n}\n\nconst initialTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n\n  const addTodo = (todo: Todo) => {\n    const newTodo = {\n      ...todo,\n      id: getNewTodoId(todos),\n    };\n\n    setTodos(currentTodo => [...currentTodo, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Todo</h1>\n\n      <div className=\"wrapper\">\n        <h2 className=\"subtitle\">Add Todo:</h2>\n        <TodoForm\n          onSubmit={addTodo}\n        />\n      </div>\n\n      <div className=\"wrapper\">\n        <h2 className=\"subtitle\">Todo List:</h2>\n        <TodoList\n          todos={todos}\n        />\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'Delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'Some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'Quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}